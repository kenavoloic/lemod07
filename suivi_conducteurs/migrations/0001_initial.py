# Generated by Django 5.2.5 on 2025-09-07 16:37

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Conducteur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salnom', models.CharField(max_length=255, verbose_name='nom')),
                ('salnom2', models.CharField(max_length=255, verbose_name='prénom')),
                ('salactif', models.BooleanField(default=True, verbose_name='Conducteur actif')),
                ('interim_p', models.BooleanField(default=True, verbose_name='Intérim')),
                ('sous_traitant_p', models.BooleanField(default=True, verbose_name='Sous-traitant')),
                ('date_naissance', models.DateField(blank=True, null=True, verbose_name='Date de naissance')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Conducteur',
                'verbose_name_plural': 'Conducteurs',
                'ordering': ['salnom', 'salnom2'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, verbose_name='Nom du service')),
                ('abreviation', models.CharField(max_length=10, verbose_name='Abréviation')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_commune', models.CharField(max_length=255, verbose_name='Commune')),
                ('code_postal', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator(message='Un code postal est long de 5 caractères', regex='^\\d{5}$')], verbose_name='Code postal')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Site',
                'verbose_name_plural': 'Sites',
                'ordering': ['nom_commune'],
            },
        ),
        migrations.CreateModel(
            name='TypologieEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, verbose_name='Nom')),
                ('abreviation', models.CharField(max_length=10, verbose_name='Abréviation')),
                ('description', models.TextField(verbose_name='Description')),
            ],
            options={
                'verbose_name': "Type d'évaluation",
                'verbose_name_plural': "Types d'évaluation",
            },
        ),
        migrations.CreateModel(
            name='Evaluateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, verbose_name='nom')),
                ('prenom', models.CharField(max_length=255, verbose_name='prénom')),
                ('user', models.OneToOneField(blank=True, help_text='Compte utilisateur Django associé à cet évaluateur', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Compte utilisateur')),
            ],
            options={
                'verbose_name': 'Évaluateur',
                'verbose_name_plural': 'Évaluateurs',
                'ordering': ['nom', 'prenom'],
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_evaluation', models.DateField(verbose_name="Date d'évaluation")),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('conducteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='suivi_conducteurs.conducteur', verbose_name='Conducteur')),
                ('evaluateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='suivi_conducteurs.evaluateur', verbose_name='Évaluateur')),
                ('type_evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='suivi_conducteurs.typologieevaluation', verbose_name="Type d'évaluation")),
            ],
            options={
                'verbose_name': 'Évaluation',
                'verbose_name_plural': 'Évaluations',
                'ordering': ['-date_evaluation'],
            },
        ),
        migrations.AddField(
            model_name='conducteur',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='suivi_conducteurs.site', verbose_name='Site'),
        ),
        migrations.CreateModel(
            name='Societe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('socid', models.PositiveIntegerField(unique=True)),
                ('socnom', models.CharField(max_length=255, verbose_name='Nom société')),
                ('socactif', models.BooleanField(default=True, verbose_name='Active')),
                ('soccode', models.CharField(max_length=255, verbose_name='Code société')),
                ('soccp', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator(message='Un code postal est long de 5 caractères', regex='^\\d{5}$')], verbose_name='Code postal')),
                ('socvillib1', models.CharField(max_length=255, verbose_name='Ville')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Société',
                'verbose_name_plural': 'Sociétés',
                'ordering': ['socnom'],
                'indexes': [models.Index(fields=['socnom'], name='suivi_condu_socnom_7df6b8_idx')],
            },
        ),
        migrations.AddField(
            model_name='conducteur',
            name='salsocid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='suivi_conducteurs.societe', to_field='socid', verbose_name='Société'),
        ),
        migrations.CreateModel(
            name='CritereEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('numero_ordre', models.PositiveIntegerField(blank=True, editable=False, null=True, unique=True)),
                ('valeur_mini', models.PositiveIntegerField()),
                ('valeur_maxi', models.PositiveIntegerField()),
                ('actif', models.BooleanField(default=True, help_text='Critère actuellement utilisé')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('type_evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='suivi_conducteurs.typologieevaluation')),
            ],
            options={
                'verbose_name': "Critère d'évaluation",
                'verbose_name_plural': "Critères d'évaluation",
                'ordering': ['numero_ordre'],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valeur', models.PositiveIntegerField(blank=True, help_text='Note attribuée', null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('critere', models.ForeignKey(help_text='Critère évalué', on_delete=django.db.models.deletion.CASCADE, to='suivi_conducteurs.critereevaluation')),
                ('evaluation', models.ForeignKey(help_text="Session d'évaluation", on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='suivi_conducteurs.evaluation')),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
                'ordering': ['critere__nom'],
                'indexes': [models.Index(fields=['evaluation', 'critere'], name='suivi_condu_evaluat_33790e_idx')],
                'unique_together': {('evaluation', 'critere')},
            },
        ),
        migrations.AddIndex(
            model_name='evaluation',
            index=models.Index(fields=['date_evaluation'], name='suivi_condu_date_ev_c8c8d8_idx'),
        ),
        migrations.AddIndex(
            model_name='evaluation',
            index=models.Index(fields=['conducteur'], name='suivi_condu_conduct_f44a40_idx'),
        ),
        migrations.AddIndex(
            model_name='evaluation',
            index=models.Index(fields=['type_evaluation'], name='suivi_condu_type_ev_548d34_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='evaluation',
            unique_together={('conducteur', 'date_evaluation', 'evaluateur', 'type_evaluation')},
        ),
    ]
